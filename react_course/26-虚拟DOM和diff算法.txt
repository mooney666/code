1. 虚拟DOM

为什么使用虚拟DOM？react使用虚拟DOM会进行diff算法的对比，从而发现哪些DOM更新了，根据变化了的虚拟DOM局部更新真实DOM，避免频繁的操作真实DOM，带来页面渲染的性能问题。

什么是虚拟DOM？它本质上就是React提供的一个JS对象而已，React通过对象来描述元素结构，这就是虚拟DOM。

怎么用虚拟DOM？React每次调用类组件的render()生命周期函数时，都会根据组件模板(JSX)创建虚拟DOM对象，React会将这个虚拟DOM对象保存下来，利用本次生成的新的虚拟DOM对象，和上一次的虚拟DOM对象进行同层对比。找出发生更新的标签、属性、元素内容，针对变化了的内容更新真实DOM。

2. diff算法特点

特点：同层对比；分为三种类型对比(虚拟DOM树的对比、组件的对比、列表元素的对比)

a. 虚拟DOM树的diff算法对比
  - 同层对比标签名称、标签属性、标签内容是否一致；不会跨层级对比。
  - 如果虚拟DOM出现跨层级移动，React直接将旧层级删除，在新的节点下创建新的层级元素。不会复用旧的DOM层级。

b. 组件的diff算法对比 (结合动态组件)
  - 如果在重复render()生成虚拟DOM时，组件没有发生变化，此时组件就相当于固定的虚拟DOM树了，只是封装了一个组件而已。参照 虚拟DOM树的diff算法对比 规则。
  - 如果组件是动态切换的，React直接放弃对比，哪怕两个组件的结构是一样的，直接将消失的组件DOM移除，出现的组件再创建新的DOM节点。(谁出现就创建谁，谁消失就销毁谁)。

c. 列表元素的diff算法对比 (结合key)
  - 没有key属性的时候，React对比新旧虚拟DOM时，会按照元素的顺序对比元素内容是否发生变化，变化了就重新生成DOM。
  - 有key属性的时候，React对比新旧虚拟DOM时，会将两个key值相同的元素进行对比，看看元素内容是否变化，变化了就重新生成DOM。